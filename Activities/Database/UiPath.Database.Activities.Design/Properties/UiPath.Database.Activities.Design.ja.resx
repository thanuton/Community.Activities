<?xml version='1.0' encoding='UTF-8'?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Parameters" xml:space="preserve">
    <value>パラメーター</value>
  </data>
  <data name="ConnectionString" xml:space="preserve">
    <value>接続文字列</value>
  </data>
  <data name="DataTable" xml:space="preserve">
    <value>データテーブル</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>接続</value>
  <comment>activity name</comment></data>
  <data name="Disconnect" xml:space="preserve">
    <value>切断</value>
  <comment>activity name</comment></data>
  <data name="Insert" xml:space="preserve">
    <value>挿入</value>
  <comment>activity name</comment></data>
  <data name="AffectedRecordsDescription" xml:space="preserve">
    <value>Sql コマンドの実行結果です。UPDATE、INSERT、DELETE 文の場合、戻り値はコマンドが処理した行数です。 他のすべての種類の文の場合、戻り値は -1 です。</value>
  </data>
  <data name="CommandTypeDescription" xml:space="preserve">
    <value>Sql コマンドの解釈方法を指定します。</value>
  </data>
  <data name="ConnectionStringDescription" xml:space="preserve">
    <value>データベース接続の確立に使用する接続文字列です。</value>
  </data>
  <data name="DatabaseConnectDescription" xml:space="preserve">
    <value>データベースに接続します。(Connect)</value>
  </data>
  <data name="DatabaseConnectionDescription" xml:space="preserve">
    <value>このアクティビティ内の操作に使用するデータベース接続です。</value>
  </data>
  <data name="DatabaseDisconnectDescription" xml:space="preserve">
    <value>データベースへの接続を閉じます。(Disconnect)</value>
  </data>
  <data name="DataTableDescription" xml:space="preserve">
    <value>Sql コマンドの出力を格納する DataTable オブジェクトです。</value>
  </data>
  <data name="DbTransactionDescription" xml:space="preserve">
    <value>データベースに接続して DatabaseConnection を返し、データベースアクティビティのスコープを提供します。トランザクションを使用に true を指定した場合、含まれる操作は単一のトランザクションで実行され、失敗した操作がなければ最後にコミットします。トランザクションを使用に false を指定した場合、すべての操作は個別にコミットされます。 このアクティビティが終了すると、データベースの接続は閉じられます。(Start Transaction)</value>
  </data>
  <data name="DefaultWidth" xml:space="preserve">
    <value>300</value>
  </data>
  <data name="ExecuteNonQueryDescription" xml:space="preserve">
    <value>データベース上で Sql 文を実行します。UPDATE、INSERT、DELETE 文の場合、戻り値はコマンドが処理した行数です。他のすべての種類の文の場合、戻り値は -1 です。(Execute Non Query)</value>
  </data>
  <data name="ExecuteQueryDescription" xml:space="preserve">
    <value>データベースに対してクエリを実行し、その結果を DataTable で返します。(Execute Query)</value>
  </data>
  <data name="ExistingDbConnectionDescription" xml:space="preserve">
    <value>すでに開いているデータベース接続です。 このプロパティを設定した場合、接続文字列とプロバイダー名のプロパティは無視されます。</value>
  </data>
  <data name="InsertDataTableDescription" xml:space="preserve">
    <value>互換性のある DataTable を既存のテーブルに挿入します。処理した行数を返します。(Insert)</value>
  </data>
  <data name="ParametersDescription" xml:space="preserve">
    <value>Sql コマンドにバインドする名前付きパラメーターのディクショナリです。Sql コマンドに含まれる '@パラメーター名' にバインドされます。これらのパラメーター名は、実行時にディクショナリからの値に置き換わります。</value>
  </data>
  <data name="ProviderNameDescription" xml:space="preserve">
    <value>データベースへのアクセスに使用するデータベースプロバイダーの名前です。 データプロバイダーの一覧は次のサイトにあります: http://msdn.microsoft.com/en-us/library/a6cd7c08(v=vs.100).aspx</value>
  </data>
  <data name="SqlDescription" xml:space="preserve">
    <value>実行する Sql コマンドです。</value>
  </data>
  <data name="StartTransaction" xml:space="preserve">
    <value>トランザクションを開始</value>
  <comment>activity name</comment></data>
  <data name="TableNameDescription" xml:space="preserve">
    <value>ターゲットのデータベーステーブルです。</value>
  </data>
  <data name="TimeoutMSDescription" xml:space="preserve">
    <value>Sql コマンドの実行が完了するまで待機する時間をミリ秒で指定します。この時間が経過すると例外をスローします。既定値は 30000 ミリ秒 (30 秒) です。0 以上でなければなりません。</value>
  </data>
  <data name="UseTransactionDescription" xml:space="preserve">
    <value>このアクティビティに含まれるデータベース操作を単一のデータベーストランザクションに含めるかを指定します。</value>
  </data>
  <data name="AffectedRecordsInsertDescription" xml:space="preserve">
    <value>挿入された行数です。</value>
  </data>
  <data name="ConfigureConnection" xml:space="preserve">
    <value>接続を構成...</value>
  </data>
  <data name="InserDataTableInputDescription" xml:space="preserve">
    <value>テーブルに挿入する DataTable オブジェクトです。この DataTable の列は、データベーステーブルの列と一致している必要があります。</value>
  </data>
  <data name="ConnectionWizard" xml:space="preserve">
    <value>接続ウィザード</value>
  </data>
  <data name="DoubleClickToView" xml:space="preserve">
    <value>ダブルクリックして表示</value>
  </data>
  <data name="EditConnectionSettings" xml:space="preserve">
    <value>接続設定を編集</value>
  </data>
  <data name="EditQuery" xml:space="preserve">
    <value>クエリを編集...</value>
  </data>
  <data name="NewDatabaseConnection" xml:space="preserve">
    <value>データベース接続を作成</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>表示名</value>
  <comment>property name</comment>
  </data>
  <data name="DatabaseConnection" xml:space="preserve">
    <value>データベース接続</value>
  </data>
  <data name="DropActivityHere" xml:space="preserve">
    <value>ここにアクティビティをドロップ</value>
  </data>
  <data name="EditSql" xml:space="preserve">
    <value>Sql を編集</value>
  </data>
  <data name="ExistingDatabaseConnection" xml:space="preserve">
    <value>既存のデータベース接続</value>
  </data>
  <data name="SqlQueryHint" xml:space="preserve">
    <value>Sql クエリです。テキストは引用符で囲む必要があります。</value>
  </data>
  <data name="TableNameHint" xml:space="preserve">
    <value>テーブル名です。テキストは引用符で囲む必要があります。</value>
  </data>
  <data name="QueryTimeoutMSDescription" xml:space="preserve">
    <value>Sql クエリの実行が完了するまで待機する時間をミリ秒で指定します。クエリ結果を取得する応答時間は含まれません。この時間が経過すると例外をスローします。既定値は 30000 ミリ秒 (30 秒) です。0 以上でなければなりません。</value>
  </data>
  <data name="CategoryDatabase" xml:space="preserve">
    <value>データベース</value>
  </data>
  <data name="CategoryAppIntegration" xml:space="preserve">
    <value>アプリの統合</value>
  </data>
  <data name="ExecuteNonQuery" xml:space="preserve">
    <value>非クエリを実行</value>
  </data>
  <data name="ExecuteQuery" xml:space="preserve">
    <value>クエリを実行</value>
  </data>
  <data name="CollectionLabel" xml:space="preserve">
    <value>(コレクション)</value>
  </data>
</root>

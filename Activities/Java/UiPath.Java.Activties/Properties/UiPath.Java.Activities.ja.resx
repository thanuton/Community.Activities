<?xml version='1.0' encoding='UTF-8'?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConstructorException" xml:space="preserve">
    <value>コンストラクターを呼び出せませんでした。</value>
  </data>
  <data name="ConvertException" xml:space="preserve">
    <value>変換できませんでした </value>
  </data>
  <data name="ConvertJavaObjectDescription" xml:space="preserve">
    <value>指定の .NET 型に Java オブジェクトを変換します。キャストできない場合には例外をスローします。(Convert Java Object)</value>
  </data>
  <data name="ConvertJavaObjectResultDescription" xml:space="preserve">
    <value>.NET に変換された Java オブジェクトです。</value>
  </data>
  <data name="CreateJavaObjectDescription" xml:space="preserve">
    <value>指定のクラスのコンストラクターを呼び出します。(Create Java Object)</value>
  </data>
  <data name="FieldNameDescription" xml:space="preserve">
    <value>このフィールド名の値を Java オブジェクトとして取得します。</value>
  </data>
  <data name="GetFieldDescritption" xml:space="preserve">
    <value>Java オブジェクトから public フィールドを取得します。(Get Field)</value>
  </data>
  <data name="GetFieldException" xml:space="preserve">
    <value>フィールドが見つかりません。</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>入力</value>
  </data>
  <data name="InvokationObjectException" xml:space="preserve">
    <value>ターゲットオブジェクトとターゲット型の両方が空です。このうちの少なくとも 1 つを設定する必要があります。</value>
  </data>
  <data name="InvokeJavaResultDescription" xml:space="preserve">
    <value>Java でロードしたオブジェクトの参照です。</value>
  </data>
  <data name="InvokeMethodException" xml:space="preserve">
    <value>メソッドを呼び出せませんでした。</value>
  </data>
  <data name="JarPathDescription" xml:space="preserve">
    <value>ロードする jar ファイルのパスです。</value>
  </data>
  <data name="JavaInitiazeException" xml:space="preserve">
    <value>Java の初期化時に発生したエラー: {0}</value>
  </data>
  <data name="JavaInvokerNotLoadedException" xml:space="preserve">
    <value>Java の呼び出し元がロードされませんでした。</value>
  </data>
  <data name="JavaObjectDescription" xml:space="preserve">
    <value>Java でロードしたオブジェクトへの参照です。</value>
  </data>
  <data name="JavaPathDescription" xml:space="preserve">
    <value>java.exe のパスです。</value>
  </data>
  <data name="LoadJarDescription" xml:space="preserve">
    <value>jar を現在の Java スコープ内にロードします。(Load Jar)</value>
  </data>
  <data name="LoadJarException" xml:space="preserve">
    <value>JAR をロードできませんでした。</value>
  </data>
  <data name="MethodNameDescription" xml:space="preserve">
    <value>Java で実行するメソッドの名前です。</value>
  </data>
  <data name="OutputDisplayName" xml:space="preserve">
    <value>出力</value>
  <comment>property name</comment></data>
  <data name="ParametersDescription" xml:space="preserve">
    <value>Java メソッドの引数リストに渡す値を、その順で指定します。引数値は null であってはいけません。</value>
  </data>
  <data name="ParametersSetException" xml:space="preserve">
    <value>{0} と {1} の両方を設定することはできません。</value>
  </data>
  <data name="ResultDisplayName" xml:space="preserve">
    <value>結果</value>
  <comment>property name</comment></data>
  <data name="TargetObjectDescription" xml:space="preserve">
    <value>この Java オブジェクトインスタンスのメソッドを呼び出します。ターゲットオブジェクトとターゲット型を同時に指定することはできません。</value>
  </data>
  <data name="TargetTypeDescription" xml:space="preserve">
    <value>Java のクラス名です。</value>
  </data>
  <data name="ValidateParentError" xml:space="preserve">
    <value>アクティビティは {0} の内部でのみ有効です。</value>
  </data>
  <data name="Do" xml:space="preserve">
    <value>実行</value>
  </data>
  <data name="InvokeJavaMethodDescription" xml:space="preserve">
    <value>Java メソッドを呼び出します。(Invoke Java Method)</value>
  </data>
  <data name="JavaScopeDescription" xml:space="preserve">
    <value>Java アクティビティのコンテナーです。(Java Scope)</value>
  </data>
  <data name="ConvertJavaObjectDisplayName" xml:space="preserve">
    <value>Java オブジェクトを変換</value>
  <comment>activity name</comment></data>
  <data name="CreateJavaObjectDisplayName" xml:space="preserve">
    <value>Java オブジェクトを作成</value>
  <comment>activity name</comment></data>
  <data name="FieldNameDisplayName" xml:space="preserve">
    <value>フィールド名</value>
  <comment>property name</comment>
  </data>
  <data name="GetFieldDisplayName" xml:space="preserve">
    <value>フィールドを取得</value>
  <comment>activity name</comment></data>
  <data name="InvokeJavaMethodDisplayName" xml:space="preserve">
    <value>Java メソッドを呼び出し</value>
  <comment>activity name</comment></data>
  <data name="JarPathDisplayName" xml:space="preserve">
    <value>Jar のパス</value>
  <comment>property name</comment></data>
  <data name="JavaObjectDisplayName" xml:space="preserve">
    <value>Java オブジェクト</value>
  <comment>property name</comment></data>
  <data name="JavaPathDisplayName" xml:space="preserve">
    <value>Java ライブラリパス</value>
  <comment>property name</comment></data>
  <data name="JavaScopeNameDisplayName" xml:space="preserve">
    <value>Java スコープ</value>
  <comment>activity name</comment></data>
  <data name="LoadJarDisplayName" xml:space="preserve">
    <value>Jar をロード</value>
  <comment>activity name</comment></data>
  <data name="MethodNameDisplayName" xml:space="preserve">
    <value>メソッド名</value>
  <comment>property name</comment></data>
  <data name="ParametersDisplayName" xml:space="preserve">
    <value>パラメーター</value>
  <comment>property name</comment></data>
  <data name="ParametersListDisplayName" xml:space="preserve">
    <value>パラメーターリスト</value>
  <comment>property name</comment></data>
  <data name="TargetObjectDisplayName" xml:space="preserve">
    <value>ターゲットオブジェクト</value>
  <comment>property name</comment></data>
  <data name="TargetTypeDisplayName" xml:space="preserve">
    <value>ターゲット型</value>
  <comment>property name</comment></data>
  <data name="FieldName" xml:space="preserve">
    <value>フィールド名</value>
  </data>
  <data name="JavaObject" xml:space="preserve">
    <value>Java オブジェクト</value>
  </data>
  <data name="MethodName" xml:space="preserve">
    <value>メソッド名</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="InvalidJavaPath" xml:space="preserve">
    <value>JAVA ライブラリへのパスは無効です。</value>
  </data>
  <data name="Target" xml:space="preserve">
    <value>ターゲット</value>
  </data>
</root>
